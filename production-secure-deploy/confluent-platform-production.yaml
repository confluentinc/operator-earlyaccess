apiVersion: platform.confluent.io/v1beta1
kind: Zookeeper
metadata:
  name: zookeeper
  namespace: confluent
spec:
  replicas: 3
  image:
    application: confluentinc/cp-zookeeper-operator:6.1.0.0
    init: confluentinc/cp-init-container-operator:6.1.0.0
  dataVolumeCapacity: 10Gi
  logVolumeCapacity: 10Gi
  authentication:
    type: digest
    jaasConfig:
      secretRef: zk-credential
  tls:
    secretRef: tls-group1
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: confluent
spec:
  replicas: 3
  image:
    application: confluentinc/cp-server-operator:6.1.0.0
    init: confluentinc/cp-init-container-operator:6.1.0.0
  dataVolumeCapacity: 10Gi
  configOverrides:
    server:
      - listener.name.internal.plain.sasl.server.callback.handler.class=io.confluent.security.auth.provider.ldap.LdapAuthenticateCallbackHandler
      - listener.name.external.plain.sasl.server.callback.handler.class=io.confluent.security.auth.provider.ldap.LdapAuthenticateCallbackHandler
      - listener.name.replication.plain.sasl.server.callback.handler.class=io.confluent.security.auth.provider.ldap.LdapAuthenticateCallbackHandler
  tls:
    secretRef: tls-group1
  metricReporter:
    enabled: true
    authentication:
      type: plain
      jaasConfigPassThrough:
        secretRef: broker-credential
    tls:
      enabled: true
  listeners:
    internal:
      authentication:
        type: plain
        jaasConfigPassThrough:
          secretRef: broker-credential
      tls:
        enabled: true
    external:
      authentication:
        type: plain
        jaasConfigPassThrough:
          secretRef: broker-credential
      externalAccess:
        type: loadBalancer
        loadBalancer:
          domain: platformops.dev.gcp.devel.cpdev.cloud
          brokerPrefix: rb
          bootstrapPrefix: rb
      tls:
        enabled: true
  authorization:
    type: rbac
    superUsers:
    - User:kafka
  services:
    mds:
      tls:
        enabled: true
      tokenKeyPair:
        secretRef: broker-credential
      externalAccess:
        type: loadBalancer
        loadBalancer:
          domain: platformops.dev.gcp.devel.cpdev.cloud
          prefix: rb-mds
      provider:
        type: ldap
        ldap:
          address: ldaps://ldap.confluent.svc.cluster.local:636
          authentication:
            type: simple
            simple:
              secretRef: broker-credential
          tls:
            enabled: true
            secretRef: tls-group1
          configurations:
            groupNameAttribute: cn
            groupObjectClass: groupOfNames
            groupMemberAttribute: member
            groupMemberAttributePattern: cn=(.*),ou=users,dc=test,dc=com
            groupSearchBase: ou=groups,dc=test,dc=com
            userNameAttribute: cn
            userMemberOfAttributePattern: cn=(.*),ou=users,dc=test,dc=com
            userObjectClass: organizationalRole
            userSearchBase: ou=users,dc=test,dc=com
  dependencies:
    kafkaRest:
      authentication:
        type: bearer
        bearer:
          secretRef: broker-credential
    zookeeper:
      endpoint: zookeeper.confluent.svc.cluster.local:2182
      authentication:
        type: digest
        jaasConfig:
          secretRef: broker-credential
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: Connect
metadata:
  name: connect
  namespace: confluent
spec:
  replicas: 2
  image:
    application: confluentinc/cp-server-connect-operator:6.1.0.0
    init: confluentinc/cp-init-container-operator:6.1.0.0
  tls:
    secretRef: tls-group1
  externalAccess:
    type: loadBalancer
    loadBalancer:
      domain: platformops.dev.gcp.devel.cpdev.cloud
      prefix: rb-connect
  authorization:
    type: rbac
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: plain
        jaasConfig:
          secretRef: mds-client-connect
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-public
      authentication:
        type: bearer
        bearer:
          secretRef: mds-client-connect
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  name: schemaregistry
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-schema-registry-operator:6.1.0.0
    init: confluentinc/cp-init-container-operator:6.1.0.0
  tls:
    secretRef: tls-group1
  externalAccess:
    type: loadBalancer
    loadBalancer:
      domain: platformops.dev.gcp.devel.cpdev.cloud
      prefix: rb-sr
  authorization:
    type: rbac
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: plain
        jaasConfig:
          secretRef: mds-client-sr
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-public
      authentication:
        type: bearer
        bearer:
          secretRef: mds-client-sr
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: KsqlDB
metadata:
  name: ksqldb
  namespace: confluent
spec:
  replicas: 2
  image:
    application: confluentinc/cp-ksqldb-server-operator:6.1.0.0
    init: confluentinc/cp-init-container-operator:6.1.0.0
  dataVolumeCapacity: 10Gi
  authorization:
    type: rbac
  externalAccess:
    type: loadBalancer
    loadBalancer:
      domain: platformops.dev.gcp.devel.cpdev.cloud
      prefix: rb-ksql
  tls:
    secretRef: tls-group1
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: plain
        jaasConfig:
          secretRef: mds-client-connect
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-public
      authentication:
        type: bearer
        bearer:
          secretRef: mds-client-ksqldb
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: controlcenter
  namespace: confluent
spec:
  replicas: 1
  podTemplate:
    probe:
      liveness:
        periodSeconds: 10
        failureThreshold: 5
        timeoutSeconds: 500 
  image:
    application: confluentinc/cp-enterprise-control-center-operator:6.1.0.0
    init: confluentinc/cp-init-container-operator:6.1.0.0
  dataVolumeCapacity: 10Gi
  authorization:
    type: rbac
  externalAccess:
    type: loadBalancer
    loadBalancer:
      domain: platformops.dev.gcp.devel.cpdev.cloud
      prefix: rb-c3
  tls:
    secretRef: tls-group1
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: plain
        jaasConfig:
          secretRef: mds-client-connect
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-public
      authentication:
        type: bearer
        bearer:
          secretRef: mds-client-c3
      tls:
        enabled: true
    connect:
      - name: connect
        url:  https://connect.confluent.svc.cluster.local:8083
        tls:
          enabled: true
    ksqldb:
      - name: ksqldb
        url:  https://ksqldb.confluent.svc.cluster.local:8088
        tls:
          enabled: true
    schemaRegistry:
      url: https://schemaregistry.confluent.svc.cluster.local:8081
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestClass
metadata:
  name: default
  namespace: confluent
spec:
  kafkaRest:
    authentication:
      type: bearer
      bearer:
        secretRef: rest-credential
